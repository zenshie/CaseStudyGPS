#include <Arduino.h>
#include <ESP8266WiFi.h>
#include <Firebase_ESP_Client.h>

//Provide the token generation process info.
#include "addons/TokenHelper.h"
#include <TinyGPS++.h>

//includes for timestamp
#include <NTPClient.h> 
#include <WiFiUdp.h>  


#define WIFI_SSID "jiangwanyin"
#define WIFI_PASSWORD "sandushengshou"

#define API_KEY "AIzaSyDPTJIyyUkkcZxOqG9hIC9bJzASmieqZJs"
#define FIREBASE_PROJECT_ID "casestudy-gps"
#define USER_EMAIL "admin@gmail.com"
#define USER_PASSWORD "admin1"


TinyGPSPlus gps;
FirebaseData firebaseData;
FirebaseAuth auth;
FirebaseConfig config;
WiFiUDP ntpUDP;
NTPClient timeClient(ntpUDP, "pool.ntp.org");

String path = "locations";  // set the Firestore collection path here
// Variable to save USER UID
String uid;

void setupWifi()
{
  Serial.begin(9600);

  WiFi.begin(WIFI_SSID, WIFI_PASSWORD);
  while (WiFi.status() != WL_CONNECTED)
  {
    delay(500);
    Serial.print(".");
  }
  Serial.println();
  Serial.print("Connected to WiFi. IP address: ");
  Serial.println(WiFi.localIP());

  /* Assign the api key (required) */
  config.api_key = API_KEY;

  /* Assign the user sign in credentials */
  auth.user.email = USER_EMAIL;
  auth.user.password = USER_PASSWORD;

  /* Assign the callback function for the long running token generation task */
  config.token_status_callback = tokenStatusCallback;  //see addons/TokenHelper.h

  Firebase.begin(&config, &auth);
  Firebase.reconnectWiFi(true);


  // Getting the user UID might take a few seconds
  Serial.println("Getting User UID");
  while ((auth.token.uid) == "") {
    Serial.print('.');
    delay(1000);
  }
  // Print user UID
  uid = auth.token.uid.c_str();
  Serial.print("User UID: ");
  Serial.print(uid);
}

void setup() {
  setupWifi();
  timeClient.begin();
}

void loop()
{
  while (Serial.available() > 0)
  {
    if (gps.encode(Serial.read()))
    {
      if (gps.location.isValid())
      {        
        double latitude = gps.location.lat();
        double longitude = gps.location.lng();

        Serial.print("Latitude: ");
        Serial.println(latitude, 6);
        Serial.print("Longitude: ");
        Serial.println(longitude, 6);        
       
        // Create a FirebaseJson object and set the latitude and longitude
        FirebaseJson json;
        json.set("fields/latitude/stringValue", String(latitude, 6));
        json.set("fields/longitude/stringValue", String(longitude, 6));


        timeClient.update();
        time_t now = timeClient.getEpochTime();

        if (now == 0) {
          Serial.println("Error getting current time");
        } else {
          // Set timestamp field with current time
          char timestampStr[30];
          strftime(timestampStr, sizeof(timestampStr), "%FT%TZ", gmtime(&now));
          
          Serial.print("Current Time: ");
          Serial.println(timestampStr);     
          // send to firestore
          json.set("fields/currentTime/timestampValue", timestampStr);
        }


        // Randomize Document ID
        String randomStr = "";
        const char* chars = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789";

        for (int i = 0; i < 20; i++) {
          randomStr += chars[random(0, 61)];
        }
        uid = randomStr + String(millis());


         // Create and Send Document to Firestore
        Serial.print("Creating document... ");
        delay(3000);  // delay start for 3 seconds
        Serial.println("Done");
        delay(3000);  // delay start for 3 seconds
        Serial.println("");
        Serial.print("Sending document.... ");

         // Creates the Document and Send to Firestore
        if (Firebase.Firestore.createDocument(&firebaseData, FIREBASE_PROJECT_ID, "" /* databaseId can be (default) or empty */, path.c_str(), json.raw()))
          Serial.printf("Success\n%s\n\n", firebaseData.payload().c_str());
        else {
          Serial.println("Data push failed.");
          Serial.print(firebaseData.errorReason());
        }


        // // Push the JSON data to Firestore
        // if (Firebase.setJSON(firebaseData, path, json))
        // {
        //   Serial.println("Data pushed to Firestore successfully.");
        // }
        // else
        // {
        //   Serial.println("Data push failed.");
        //   Serial.println("Reason: " + firebaseData.errorReason());
        // }
      }
      delay(5000);
    }
  }
}
